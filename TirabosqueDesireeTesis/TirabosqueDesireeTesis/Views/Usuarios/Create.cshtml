@model TirabosqueDesireeTesis.Models.Usuario

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container" style="margin-top:100px; padding-top: 50px">
   


    @using (Html.BeginForm("Create", "Usuarios", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Crear Usuario</h2>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImagenFile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <span class="btn btn-default btn-file">
                            @Html.TextBoxFor(modelo => modelo.ImagenFile, new { type = "file" })
                        </span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IdProvincia, "Provincia", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IdProvincia", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdProvincia, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IdLocalidad, "Localidad", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IdLocalidad", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdLocalidad, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Crear" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>

       

    </div>
    }


</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $("#IdProvincia").change(function () {
                $("#IdLocalidad").empty();
                $("#IdLocalidad").append('<option value="0">[Seleccione una localidad...]</option>');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetLocalidades")',
                    dataType: 'json',
                    data: { IdProvincia: $("#IdProvincia").val() },
                    success: function (data) {
                        $.each(data, function (i, data) {
                            $("#IdLocalidad").append('<option value="'
                                + data.IdLocalidad + '">'
                                + data.Descripcion + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve localidades.' + ex);
                    }
                });
                return false;
            })
        });
    </script>
}
